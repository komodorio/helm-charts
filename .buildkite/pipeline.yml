steps:
  - label: ":memo: helm template check for sanity"
    command: helm template komodor-agent charts/komodor-agent -f charts/komodor-agent/values.yaml --set apiKey="sanity" --set clusterName=test-template
    agents:
      builder: "dind"
    if: build.message !~ /feat\(OSS.+\):/i

  - label: ":memo: Test bump version script"
    command: bats .buildkite/pipeline_scripts_tests/*.bat
    agents:
      builder: "dind"
    if: build.message !~ /feat\(OSS.+\):/i

  - label: ":book: Validate Readme is up to date"
    commands:
      - cd charts/komodor-agent
      - make install-helm-docs
      - make validate-readme

    if: build.message !~ /feat\(OSS.+\):/i

  - label: ":test_tube: Basic tests"
    commands:
      - cd .buildkite/tests
      - ./ci/use-new-agent-version.sh
      - make basic_test
    agents:
      builder: "dind"
    plugins:
      - zacharymctague/aws-ssm#v1.0.0:
          parameters:
            API_KEY: /helm-chart-test/production/API_KEY

  - label: ":test_tube: values_base_test"
    commands:
      - cd .buildkite/tests
      - ./ci/use-new-agent-version.sh
      - make values_base_test
    agents:
      builder: "dind"
    plugins:
      - zacharymctague/aws-ssm#v1.0.0:
          parameters:
            API_KEY: /helm-chart-test/production/API_KEY

  - label: ":test_tube: values_capabilities_events_test"
    commands:
      - cd .buildkite/tests
      - ./ci/use-new-agent-version.sh
      - make values_capabilities_events_test
    agents:
      builder: "dind"
    plugins:
      - zacharymctague/aws-ssm#v1.0.0:
          parameters:
            API_KEY: /helm-chart-test/production/API_KEY

  - label: ":test_tube: values_capabilities_proxy_test"
    commands:
      - cd .buildkite/tests
      - ./ci/use-new-agent-version.sh
      - make values_capabilities_proxy_test
    agents:
      builder: "dind"
    plugins:
      - zacharymctague/aws-ssm#v1.0.0:
          parameters:
            API_KEY: /helm-chart-test/production/API_KEY

  - label: ":test_tube: values_capabilities_test"
    commands:
      - cd .buildkite/tests
      - ./ci/use-new-agent-version.sh
      - make values_capabilities_test
    agents:
      builder: "dind"
    plugins:
      - zacharymctague/aws-ssm#v1.0.0:
          parameters:
            API_KEY: /helm-chart-test/production/API_KEY

  - label: ":test_tube: values_components_test"
    commands:
      - cd .buildkite/tests
      - ./ci/use-new-agent-version.sh
      - make values_components_test
    agents:
      builder: "dind"
    plugins:
      - zacharymctague/aws-ssm#v1.0.0:
          parameters:
            API_KEY: /helm-chart-test/production/API_KEY

  - label: ":test_tube: legacy_k8s_versions_test"
    commands:
      - cd .buildkite/tests
      - ./ci/use-new-agent-version.sh
      - make legacy_k8s_versions_test
    agents:
      builder: "dind"
    plugins:
      - zacharymctague/aws-ssm#v1.0.0:
          parameters:
            API_KEY: /helm-chart-test/production/API_KEY

  - wait

  - label: ":running: dry-run installation on staging before version bump"
    commands:
      - komo ctx staging
      - helm get values komodor-agent-production -n komodor-agent > prod-values.yaml
      - helm upgrade --install komodor-agent-production -n komodor-agent -f prod-values.yaml --dry-run charts/komodor-agent --set apiKey="test" --set clusterName=staging-test
    if: build.message !~ /feat\(OSS.+\):/i
  - wait

  - label: ":new: test helm new install"
    commands:
      - ./.buildkite/pipeline_scripts/test_helm_new_install.sh
    agents:
      builder: "dind"
    plugins:
      - zacharymctague/aws-ssm#v1.0.0:
          parameters:
            KOMODOR_AGENT_STAGING_API_KEY: /komodor/staging/komodor-agent-chart/api-key
    if: build.message !~ /feat\(OSS.+\):/i && build.branch != "master"
  - wait

  - label: ":weight_lifter: test helm update install"
    commands:
      - ./.buildkite/pipeline_scripts/test_helm_update_install.sh
    agents:
      builder: "dind"
    plugins:
      - zacharymctague/aws-ssm#v1.0.0:
          parameters:
            KOMODOR_AGENT_STAGING_API_KEY: /komodor/staging/komodor-agent-chart/api-key

    if: build.message !~ /feat\(OSS.+\):/i && build.branch != "master"
  - wait

  - block: ":infinity: Bump Versions"
    if: build.message !~ /feat\(OSS.+\):/i && build.branch == "master"

  - label: "Bump Versions"
    commands:
      - ./.buildkite/pipeline_scripts/bump_version.sh
    agents:
      builder: "dind"
    key: bump-versions
    if: build.message !~ /feat\(OSS.+\):/i && build.branch == "master"

  - wait

  - block: ":rocket: release helm chart"
    prompt: "Unblock this step only after there is a GitHub release for the new version"
    if: build.message !~ /feat\(OSS.+\):/i && build.branch == "master"

  - label: Publish Helm charts to Github Pages
    env:
      GITHUB_PAGES_REPO: "komodorio/helm-charts"
      BRANCH: $BUILDKITE_BRANCH
    commands:
      - ./.buildkite/pipeline_scripts/publish_helm_charts.sh
    agents:
      builder: "dind"
    plugins:
      - zacharymctague/aws-ssm#v1.0.0:
          parameters:
            DOCKERHUB_USERNAME: /app/ci/default/dockerhub/username
            DOCKERHUB_PASSWORD: /app/ci/default/dockerhub/password
    if: build.message !~ /feat\(OSS.+\):/i && build.branch == "master"

  - label: Create GitHub release
    commands:
      - ./.buildkite/pipeline_scripts/create_gh_draft_release.sh
    plugins:
      - zacharymctague/aws-ssm#v1.0.0:
          parameters:
            GH_TOKEN: /komo-cli/github/search-token

    agents:
      builder: "non-docker"
    if: build.message !~ /feat\(OSS.+\):/i && build.branch == "master"
  - wait

  - label: ":eyeglasses: validate helm chart version updated"
    commands:
      - python3 ./.buildkite/validate_helm_chart_updated.py "komodor-agent"
    agents:
      builder: "dind"
    if: build.message !~ /feat\(OSS.+\):/i && build.branch == "master"
  - wait

  - label: ":magic_wand: Install new komodor-agent version on komodor staging :kubernetes: cluster"
    commands:
      - komo ctx staging
      - helm repo add komodorio https://helm-charts.komodor.io
      - helm repo update
      - helm get values komodor-agent-staging -n komodor-staging > staging-values-to-reuse.yaml
      - helm upgrade --install komodor-agent-staging komodorio/komodor-agent -f staging-values-to-reuse.yaml -f ./.buildkite/pipeline_scripts/staging-values.yaml --namespace=komodor-staging --dry-run
      - helm upgrade --install komodor-agent-staging komodorio/komodor-agent -f staging-values-to-reuse.yaml -f ./.buildkite/pipeline_scripts/staging-values.yaml --namespace=komodor-staging --set apiKey=$$KOMODOR_AGENT_STAGING_API_KEY

      - ./.buildkite/pipeline_scripts/update_agent.sh staging komodor-staging komodor-agent-production $$STAGING_PRODUCTION_API_KEY
    agents:
      builder: "dind"
    plugins:
      - zacharymctague/aws-ssm#v1.0.0:
          parameters:
            KOMODOR_AGENT_STAGING_API_KEY: /komodor/staging/komodor-agent-chart/api-key
            STAGING_PRODUCTION_API_KEY: /komodor/staging/kubernetes/prod-agent-api-key

    if: build.message !~ /feat\(OSS.+\):/i && build.branch == "master"

  - label: ":magic_wand: Install new komodor-agent version on komodor production :kubernetes: cluster"
    commands:
      - ./.buildkite/pipeline_scripts/update_agent.sh production production komodor-agent
      - ./.buildkite/pipeline_scripts/update_agent.sh production production-rc-chart komodor-agent-rc "" "komodor-agent-rc" "rc"
    agents:
      builder: "dind"
    plugins:
      - zacharymctague/aws-ssm#v1.0.0:
          parameters:
            API_KEY: /komodor/production/kubernetes/api-key
    if: build.message !~ /feat\(OSS.+\):/i && build.branch == "master"

  - label: ":magic_wand: Install new watcher version on komodor ci :kubernetes: cluster"
    commands:
      - ./.buildkite/pipeline_scripts/update_agent.sh ci ci komodor-agent
    agents:
      builder: "dind"
    plugins:
      - zacharymctague/aws-ssm#v1.0.0:
          parameters:
            API_KEY: /komodor/ci/kubernetes/agent-api-key
    if: build.message !~ /feat\(OSS.+\):/i && build.branch == "master"
