steps:
  - label: ":memo: LEGACY: helm template check for sanity"
    command: helm template k8s-watcher charts/k8s-watcher -f charts/k8s-watcher/values.yaml --set apiKey="sanity" --set watcher.clusterName=test-template
    agents:
      builder: "dind"
    if: build.message !~ /feat\(OSS.+\):/i

  - label: ":memo: helm template check for sanity"
    command: helm template komodor-agent charts/komodor-agent -f charts/komodor-agent/values.yaml --set apiKey="sanity" --set clusterName=test-template
    agents:
      builder: "dind"
    if: build.message !~ /feat\(OSS.+\):/i

  - label: ":book: Validate Readme is up to date"
    commands:
      - cd charts/komodor-agent
      - make install-helm-docs
      - make validate-readme

    if: build.message !~ /feat\(OSS.+\):/i

  - label: ":test_tube: Basic tests"
    commands:
      - cd .buildkite/tests
      - make basic_test
    agents:
      builder: "dind"
    plugins:
      - zacharymctague/aws-ssm#v1.0.0:
          parameters:
            API_KEY: /helm-chart-test/production/API_KEY

  - label: ":test_tube: values_base_test"
    commands:
      - cd .buildkite/tests
      - make values_base_test
    agents:
      builder: "dind"
    plugins:
      - zacharymctague/aws-ssm#v1.0.0:
          parameters:
            API_KEY: /helm-chart-test/production/API_KEY

  - label: ":test_tube: values_capabilities_events_test"
    commands:
      - cd .buildkite/tests
      - make values_capabilities_events_test
    agents:
      builder: "dind"
    plugins:
      - zacharymctague/aws-ssm#v1.0.0:
          parameters:
            API_KEY: /helm-chart-test/production/API_KEY

  - label: ":test_tube: values_capabilities_proxy_test"
    commands:
      - cd .buildkite/tests
      - make values_capabilities_proxy_test
    agents:
      builder: "dind"
    plugins:
      - zacharymctague/aws-ssm#v1.0.0:
          parameters:
            API_KEY: /helm-chart-test/production/API_KEY

  - label: ":test_tube: values_capabilities_test"
    commands:
      - cd .buildkite/tests
      - make values_capabilities_test
    agents:
      builder: "dind"
    plugins:
      - zacharymctague/aws-ssm#v1.0.0:
          parameters:
            API_KEY: /helm-chart-test/production/API_KEY

  - label: ":test_tube: values_components_test"
    commands:
      - cd .buildkite/tests
      - make values_components_test
    agents:
      builder: "dind"
    plugins:
      - zacharymctague/aws-ssm#v1.0.0:
          parameters:
            API_KEY: /helm-chart-test/production/API_KEY

  - wait

  - label: ":running: LEGACY: dry-run installation on staging before version bump"
    commands:
      - komo ctx staging
      - helm upgrade --install k8s-watcher-production --reuse-values --dry-run charts/k8s-watcher --set apiKey="test" --set watcher.clusterName=staging-test
    if: build.message !~ /feat\(OSS.+\):/i

  - label: ":running: dry-run installation on staging before version bump"
    commands:
      - komo ctx staging
      - helm get values komodor-agent-production -n komodor-agent > prod-values.yaml
      - helm upgrade --install komodor-agent-production -n komodor-agent -f prod-values.yaml --dry-run charts/komodor-agent --set apiKey="test" --set clusterName=staging-test
    if: build.message !~ /feat\(OSS.+\):/i
  - wait

  - label: ":new: LEGACY: test helm new install"
    commands:
      - ./.buildkite/pipeline_scripts/legacy_test_helm_new_install.sh
    agents:
      builder: "dind"
    plugins:
      - zacharymctague/aws-ssm#v1.0.0:
          parameters:
            STAGING_API_KEY: /komodor/staging/kubernetes/agent-api-key
    if: build.message !~ /feat\(OSS.+\):/i && build.branch != "master"

  - label: ":new: test helm new install"
    commands:
      - ./.buildkite/pipeline_scripts/test_helm_new_install.sh
    agents:
      builder: "dind"
    plugins:
      - zacharymctague/aws-ssm#v1.0.0:
          parameters:
            KOMODOR_AGENT_STAGING_API_KEY: /komodor/staging/komodor-agent-chart/api-key
    if: build.message !~ /feat\(OSS.+\):/i && build.branch != "master"
  - wait

  - label: ":weight_lifter: LEGACY: test helm update install"
    commands:
      - ./.buildkite/pipeline_scripts/legacy_test_helm_update_install.sh
    agents:
      builder: "dind"
    plugins:
      - zacharymctague/aws-ssm#v1.0.0:
          parameters:
            STAGING_API_KEY: /komodor/staging/komodor-agent-chart/api-key

  - label: ":weight_lifter: test helm update install"
    commands:
      - ./.buildkite/pipeline_scripts/test_helm_update_install.sh
    agents:
      builder: "dind"
    plugins:
      - zacharymctague/aws-ssm#v1.0.0:
          parameters:
            KOMODOR_AGENT_STAGING_API_KEY: /komodor/staging/komodor-agent-chart/api-key

    if: build.message !~ /feat\(OSS.+\):/i && build.branch != "master"
  - wait

  - block: ":infinity: Bump Versions"
    if: build.message !~ /feat\(OSS.+\):/i && build.branch == "master"

  - label: "Bump Versions"
    commands:
      - ./.buildkite/pipeline_scripts/bump_versions.sh
    agents:
      builder: "dind"
    key: bump-versions
    if: build.message !~ /feat\(OSS.+\):/i && build.branch == "master"
  - wait

  - block: ":rocket: release helm chart"
    if: build.message !~ /feat\(OSS.+\):/i && build.branch == "master"

  - label: Publish Helm charts to Github Pages
    env:
      - GITHUB_PAGES_REPO: "komodorio/helm-charts"
      - BRANCH: $BUILDKITE_BRANCH
    commands:
      - ./.buildkite/pipeline_scripts/publish_helm_charts.sh
    agents:
      builder: "dind"
    if: build.message !~ /feat\(OSS.+\):/i && build.branch == "master"
  - wait

  - label: ":eyeglasses: LEGACY: validate helm chart version updated"
    commands:
      - python3 ./.buildkite/validate_helm_chart_updated.py "k8s-watcher"
    agents:
      builder: "dind"
    if: build.message !~ /feat\(OSS.+\):/i && build.branch == "master"

  - label: ":eyeglasses: validate helm chart version updated"
    commands:
      - python3 ./.buildkite/validate_helm_chart_updated.py "komodor-agent"
    agents:
      builder: "dind"
    if: build.message !~ /feat\(OSS.+\):/i && build.branch == "master"
  - wait

  - label: ":magic_wand: Install new komodor-agent version on komodor staging :kubernetes: cluster"
    commands:
      - komo ctx staging
      - helm repo add komodorio https://helm-charts.komodor.io
      - helm repo update
      - helm get values komodor-agent-staging > staging-values.yaml
      - helm upgrade --install komodor-agent-staging komodorio/komodor-agent -f staging-values.yaml --dry-run
      - helm upgrade --install komodor-agent-staging komodorio/komodor-agent -f staging-values.yaml --set clusterName=komodor-staging-eks --namespace=komodor-staging --set imagePullSecret=docker-cfg-komodorio --set communications.serverHost=https://staging.app.komodor.com --set communications.tasksServerHost=https://staging.app.komodor.com --set communications.wsHost=wss://staging.app.komodor.com --set capabilities.telemetry.enable=false --set communications.telemetryServerHost=https://staging.telemetry.komodor.com --set apiKey=$$KOMODOR_AGENT_STAGING_API_KEY --set allowedResources.secret=true --set capabilities.event.redact="{.*KEY.*,.*key.*,.*BUGSNAG.*}"

      - ./.buildkite/pipeline_scripts/update_agent.sh staging komodor-staging komodor-agent $$STAGING_PRODUCTION_API_KEY
    agents:
      builder: "dind"
    plugins:
      - zacharymctague/aws-ssm#v1.0.0:
          parameters:
            KOMODOR_AGENT_STAGING_API_KEY: /komodor/staging/komodor-agent-chart/api-key
            STAGING_PRODUCTION_API_KEY: /komodor/staging/kubernetes/prod-agent-api-key

    if: build.message !~ /feat\(OSS.+\):/i && build.branch == "master"

  - label: ":magic_wand: Install new komodor-agent version on komodor production :kubernetes: cluster"
    commands:
      - ./.buildkite/pipeline_scripts/legacy_update_agent.sh production production-legacy-chart k8s-watcher-legacy
      - ./.buildkite/pipeline_scripts/update_agent.sh production production komodor-agent
    agents:
      builder: "dind"
    plugins:
      - zacharymctague/aws-ssm#v1.0.0:
          parameters:
            API_KEY: /komodor/production/kubernetes/api-key
    if: build.message !~ /feat\(OSS.+\):/i && build.branch == "master"

  - label: ":magic_wand: Install new watcher version on komodor ci :kubernetes: cluster"
    commands:
      - ./.buildkite/pipeline_scripts/update_agent.sh ci buildkite-cluster komodor-agent
    agents:
      builder: "dind"
    plugins:
      - zacharymctague/aws-ssm#v1.0.0:
          parameters:
            API_KEY: /komodor/ci/kubernetes/agent-api-key
    if: build.message !~ /feat\(OSS.+\):/i && build.branch == "master"
