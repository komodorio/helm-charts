  "Allo","Allo 'Allo","Aye oop","Ay up","Ahoy","G'day","Greetings","Hello","Hey there","Hey","Hi there","Hi","Hiya","How are things","How are ya","How ya doin'","How's it goin'","How's it going","How's life","Howdy","Sup","What's new","What's up","

 19 2019, 23:04:32) 
[GCC 5.4.0 20160609] on linux
Type "help", "copyright", "credits" or "license" for more information.
>>> import paramiko
>>> paramiko.SSHClient()
<paramiko.client.SSHClient object at 0x7f78298ee5c0>
>>> 
>>> ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'ssh' is not defined
>>> ssh = paramiko.SSHClient()
>>> ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())
>>> ssh.connect('iil-login.iil.intel.com', 22, 'itaamlausys', 'MLAisNumber1!')
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/usr/local/lib/python3.6/dist-packages/paramiko/client.py", line 446, in connect
    passphrase,
  File "/usr/local/lib/python3.6/dist-packages/paramiko/client.py", line 735, in _auth
    filename, pkey_class, passphrase
  File "/usr/local/lib/python3.6/dist-packages/paramiko/client.py", line 596, in _key_from_filepath
    key.load_certificate(cert_pa










    apiVersion: apps/v1
kind: Deployment
metadata:
  name: k8s-watcher
  namespace: komodor
  labels:
    helm.sh/chart: k8s-watcher-0.1.16
    app.kubernetes.io/name: k8s-watcher
    app.kubernetes.io/instance: k8s-watcher
    app.kubernetes.io/version: "0.1.9"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: k8s-watcher
      app.kubernetes.io/instance: k8s-watcher
  template:
    metadata:
      annotations:
        checksum/config: 714e3aa05eb07176ca6bf57ba06dd0bbbecc906e9db659d20bb1a5222c8bdd94
      labels:
        app.kubernetes.io/name: k8s-watcher
        app.kubernetes.io/instance: k8s-watcher
    spec:
      serviceAccountName: k8s-watcher
      containers:
        - name: k8s-watcher
          image: "komodorio/k8s-watcher:0.1.10"
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              cpu: 500m
              memory: 1024Mi
            requests:
              cpu: 100m
              memory: 128Mi
          volumeMounts:
            - name: configuration
              mountPath: /etc/komodor
          env:
            - name: KOMOKW_API_KEY
              valueFrom:
                secretKeyRef:
                  name: k8s-watcher-secret
                  key: apiKey
{{- if .Values.proxy.enabled }}
            - name: http_proxy
              value: {{ .Values.proxy.http }}
            - name: https_proxy
              value: {{ .Values.proxy.https }}
            - name: no_proxy
              value: {{ .Values.proxy.no-proxy }}
{{- end }}
          ports:
            - name: http-healthz
              containerPort: 8090
          livenessProbe:
            httpGet:
              path: /healthz
              port: http-healthz
            periodSeconds: 10
            initialDelaySeconds: 10
            failureThreshold: 3
            successThreshold: 1
          readinessProbe:
            httpGet:
              path: /healthz
              port: http-healthz
            initialDelaySeconds: 5
            periodSeconds: 5
            failureThreshold: 3
            successThreshold: 1
      volumes:
        - name: configuration
          configMap:
            name: k8s-watcher-config
            items:
              - key: komodor-k8s-watcher.yaml
                path: komodor-k8s-watcher.yaml
