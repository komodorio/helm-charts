apiVersion: apps/v1
kind: Deployment
metadata:
  name: k8s-watcher
  namespace: komodor
  labels:
    helm.sh/chart: k8s-watcher-1.11.24
    app.kubernetes.io/name: k8s-watcher
    app.kubernetes.io/instance: k8s-watcher
    app.kubernetes.io/version: "0.2.13"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: k8s-watcher
      app.kubernetes.io/instance: k8s-watcher
  template:
    metadata:
      annotations:
        checksum/config: 62858fe9ddcf2c85e5e69cbd4a4c8be91adcc79f94f92320d9daa9ac3bfc0cb4
      labels:
        app.kubernetes.io/name: k8s-watcher
        app.kubernetes.io/instance: k8s-watcher
    spec:
      priorityClassName: system-cluster-critical
      serviceAccountName: k8s-watcher
      containers:
        - name: k8s-watcher
          image: "public.ecr.aws/g8r5w0b5/k8s-watcher:0.2.13"
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              cpu: 1
              memory: 4Gi
            requests:
              cpu: 0.25
              memory: 256Mi
          volumeMounts:
            - name: configuration
              mountPath: /etc/komodor
            - name: tmp
              mountPath: /tmp
            - name: podinfo
              mountPath: /etc/podinfo
            - name: helm-data
              mountPath: /opt/watcher/helm
            - name: kube-cache
              mountPath: /.kube
          env:
            - name: KOMOKW_API_KEY
              valueFrom:
                secretKeyRef:
                  name: k8s-watcher-secret
                  key: apiKey
            - name: HELM_CACHE_HOME
              value: /opt/watcher/helm/cache
            - name: HELM_CONFIG_HOME
              value: /opt/watcher/helm/config
            - name: HELM_DATA_HOME
              value: /opt/watcher/helm/data
          securityContext:
            readOnlyRootFilesystem: true
            runAsUser: 1000
            runAsGroup: 1000
            allowPrivilegeEscalation: false
          ports:
            - name: http-healthz
              containerPort: 8090
          livenessProbe:
            httpGet:
              path: /healthz
              port: http-healthz
            periodSeconds: 60
            initialDelaySeconds: 15
            failureThreshold: 10
            successThreshold: 1
          readinessProbe:
            httpGet:
              path: /healthz
              port: http-healthz
            initialDelaySeconds: 5
            periodSeconds: 5
            failureThreshold: 3
            successThreshold: 1
      volumes:
        - name: configuration
          configMap:
            name: k8s-watcher-config
            items:
              - key: komodor-k8s-watcher.yaml
                path: komodor-k8s-watcher.yaml
        - name: tmp
          emptyDir:
            sizeLimit: 100Mi
        - name: podinfo
          downwardAPI:
            items:
              - path: "mem_limit"
                resourceFieldRef:
                  containerName: k8s-watcher
                  resource: limits.memory
                  divisor: 1Mi
        - name: helm-data
          emptyDir:
            sizeLimit: 256Mi
        - name: kube-cache
          emptyDir:
            sizeLimit: 1Gi
