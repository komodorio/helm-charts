{{- if (and (.Values.metrics).enabled .Values.daemon) }}
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ include "k8s-watcher.fullname" . }}-daemon
  {{- if hasKey .Values "namespace" }}
  namespace: {{ .Values.namespace }}
  {{- end }}
  labels:
    {{- include "daemon.labels" . | nindent 4 }}
  {{- with .Values.deploymentAnnotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  selector:
    matchLabels:
      {{- include "daemon.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "daemon.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "k8s-watcher.serviceAccountName" . }}
      initContainers:
        - name: init-daemon
          image: "{{ .Values.daemon.init.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.daemon.init.image.pullPolicy }}
          volumeMounts:
            - name: configuration
              mountPath: /etc/komodor
          env:
            {{- if hasKey .Values "namespace" }}
            - name: NAMESPACE
              value: {{ .Values.namespace }}
            {{- end }}
            - name: KOMOKW_API_KEY
              valueFrom:
                secretKeyRef:
                  {{- if .Values.existingSecret }}
                  name: {{ .Values.existingSecret | required "Existing secret name required!" }}
                  key: apiKey
                  {{- else }}
                  name: {{ include "k8s-watcher.name" . }}-secret
                  key: apiKey
                  {{- end }}
{{- include "k8s-watcher.proxy-conf" . }}
      containers:
        - name: daemon
          image: {{ .Values.daemon.image.repository }} 
          imagePullPolicy: {{ .Values.daemon.image.pullPolicy }}
          volumeMounts:
            - name: {{ include "k8s-watcher.name" . }}-daemon-config
              mountPath: /etc/telegraf/telegraf.conf
              subPath: telegraf.conf
          resources:
            {{- toYaml .Values.daemon.resources | nindent 12 }}
          envFrom:
          - configMapRef:
              name:  {{ (or .Values.watcher.daemon .Values.watcher.metrics).varsConfigMapName }}
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            {{- if .Values.proxy.http }}
            - name: KOMOKW_HTTP_PROXY_URL
              value: {{ .Values.proxy.http }}
            {{- end }}
            {{- if .Values.proxy.https }}
            - name: KOMOKW_HTTPS_PROXY_URL
              value: {{ .Values.proxy.https }}
            {{- end }}
            {{- if .Values.watcher.clusterName }}
            - name: CLUSTER_NAME
              value: {{ .Values.watcher.clusterName }}
            {{- end }}
      {{- with .Values.daemon.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: {{ include "k8s-watcher.name" . }}-daemon-config
          configMap:
            name: {{ include "k8s-watcher.name" . }}-daemon-config
        - name: configuration
          configMap:
            name: {{ include "k8s-watcher.name" . }}-config
            items:
              - key: komodor-k8s-watcher.yaml
                path: komodor-k8s-watcher.yaml
{{- end }}