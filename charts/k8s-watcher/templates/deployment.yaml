apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "k8s-watcher.fullname" . }}
  {{- if hasKey .Values "namespace" }}
  namespace: {{ .Values.namespace }}
  {{- end }}
  labels:
    {{- include "k8s-watcher.labels" . | nindent 4 }}
  {{- with .Values.deploymentAnnotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  selector:
    matchLabels:
      {{- include "k8s-watcher.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "k8s-watcher.selectorLabels" . | nindent 8 }}
    spec:
      priorityClassName: {{ .Release.Name }}-agent-high-priority
      serviceAccountName: {{ include "k8s-watcher.serviceAccountName" . }}
      {{- if .Values.nodeSelector }}
      nodeSelector:
      {{- toYaml .Values.nodeSelector | nindent 8 }}
      {{- end }}
      containers:
        {{- include "network_mapper.deployment.container" . | nindent 8 }}
        
{{- if ((.Values.supervisor)).enabled }}
        - name: "supervisor"
          image: "{{ ((.Values.supervisor.image)).repository | default "public.ecr.aws/komodor-public/supervisor" }}:{{ ((.Values.supervisor.image)).tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ ((.Values.supervisor.image)).pullPolicy | default "IfNotPresent" }}
          resources:
            {{- toYaml .Values.supervisor.resources | nindent 12 }}
          volumeMounts:
            - name: configuration
              mountPath: /etc/komodor
          env:
            - name: KOMOKW_API_KEY
              valueFrom:
                secretKeyRef:
{{- if .Values.existingSecret }}
                  name: {{ .Values.existingSecret | required "Existing secret name required!" }}
                  key: apiKey
{{- else }}
                  name: {{ include "k8s-watcher.name" . }}-secret
                  key: apiKey
{{- end }}
{{- if ((((((.Values.supervisor)).servers)).healthCheck)).port }}
            - name: KOMOKW_SERVERS_HEALTHCHECK_PORT
              value: "{{ .Values.supervisor.servers.healthCheck.port }}"
{{- end }}
{{- include "k8s-watcher.proxy-conf" . }}
          securityContext:
            readOnlyRootFilesystem: true
            runAsUser: 1000
            runAsGroup: 1000
            allowPrivilegeEscalation: false
          ports:
            - name: http-healthz
              containerPort: {{ .Values.supervisor.servers.healthCheck.port | default 8089 }}
          livenessProbe:
            httpGet:
              path: /healthz
              port: http-healthz
            periodSeconds: 60
            initialDelaySeconds: 15
            failureThreshold: 10
            successThreshold: 1
          readinessProbe:
            httpGet:
              path: /healthz
              port: http-healthz
            initialDelaySeconds: 5
            periodSeconds: 5
            failureThreshold: 3
            successThreshold: 1
{{- end }}
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: configuration
              mountPath: /etc/komodor
            - name: tmp
              mountPath: /tmp
{{- if .Values.enableMemLimitChecks }}
            - name: podinfo
              mountPath: /etc/podinfo
{{- end }}
{{- if ((.Values.helm).enableActions) }}
            - name: helm-data
              mountPath: /opt/watcher/helm
{{- end }}
{{- if .Values.enableRWCache }}
            - name: kube-cache
              mountPath: /.kube
{{- end }}
          env:
            - name: KOMOKW_API_KEY
              valueFrom:
                secretKeyRef:
{{- if .Values.existingSecret }}
                  name: {{ .Values.existingSecret | required "Existing secret name required!" }}
                  key: apiKey
{{- else }}
                  name: {{ include "k8s-watcher.name" . }}-secret
                  key: apiKey
{{- end }}
            - name: HELM_CACHE_HOME
              value: /opt/watcher/helm/cache
            - name: HELM_CONFIG_HOME
              value: /opt/watcher/helm/config
            - name: HELM_DATA_HOME
              value: /opt/watcher/helm/data
{{- include "k8s-watcher.proxy-conf" . }}
          securityContext:
            readOnlyRootFilesystem: true
            runAsUser: 1000
            runAsGroup: 1000
            allowPrivilegeEscalation: false
          ports:
            - name: http-healthz
              containerPort: {{ .Values.watcher.servers.healthCheck.port | default 8090 }}
          livenessProbe:
            httpGet:
              path: /healthz
              port: http-healthz
            periodSeconds: 60
            initialDelaySeconds: 15
            failureThreshold: 10
            successThreshold: 1
          readinessProbe:
            httpGet:
              path: /healthz
              port: http-healthz
            initialDelaySeconds: 5
            periodSeconds: 5
            failureThreshold: 3
            successThreshold: 1
      volumes:
        - name: configuration
          configMap:
            name: {{ include "k8s-watcher.name" . }}-config
            items:
              - key: komodor-k8s-watcher.yaml
                path: komodor-k8s-watcher.yaml
        - name: tmp
          emptyDir:
            sizeLimit: 100Mi
{{- if .Values.enableMemLimitChecks }}
        - name: podinfo
          downwardAPI:
            items:
              - path: "mem_limit"
                resourceFieldRef:
                  containerName: {{ .Chart.Name }}
                  resource: limits.memory
                  divisor: 1Mi
{{- end }}
{{- if ((.Values.helm).enableActions) }}
        - name: helm-data
          emptyDir:
            sizeLimit: {{ .Values.helm.volumeSizeLimit | default "256Mi" }}
{{- end }}
{{- if .Values.enableRWCache }}
        - name: kube-cache
          emptyDir:
            sizeLimit: 1Gi
{{- end }}
