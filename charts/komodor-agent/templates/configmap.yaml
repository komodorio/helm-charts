{{- include "migrateHelmValues" . -}}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "komodorAgent.name" . }}-config
data:
  komodor-k8s-watcher.yaml: |
    {{ toYaml .Values.communications | trim | nindent 4 }}
    clusterName: {{ .Values.clusterName | required "clusterName is a required value!" }}
    chartVersion: {{ .Chart.Version | quote }}
    enableAgentTaskExecution: true
    enableAgentTaskExecutionV2: true
    allowReadingPodLogs: {{ .Values.capabilities.logs.enabled}}
    enableHelm: {{ .Values.capabilities.helm.enabled }}
    daemon:
      enabled: {{ .Values.capabilities.metrics }}
    collectHistory: true
    watchNamespace: {{ .Values.capabilities.events.watchNamespace }}
    namespacesDenylist: {{ toYaml .Values.capabilities.events.namespacesDenylist | trim | nindent 6 }}
    logsNamespacesDenylist: {{ toYaml .Values.capabilities.logs.logsNamespacesDenylist | trim | nindent 6  }}
    logsNamespacesAllowlist: {{ toYaml .Values.capabilities.logs.logsNamespacesAllowlist | trim | nindent 6 }}
    nameDenylist: {{ toYaml .Values.capabilities.logs.nameDenylist | trim | nindent 6 }}
    redact: {{ toYaml .Values.capabilities.events.redact | trim | nindent 6 }}
    redactLogs: {{ toYaml .Values.capabilities.logs.redact | trim | nindent 6 }}
    redaction: {{ toYaml .Values.capabilities.redaction | trim | nindent 6 }}
    actions:
      basic: {{ .Values.capabilities.actions }}
      advanced: {{ .Values.capabilities.actions }}
      podExec: {{ .Values.capabilities.actions }}
      portforward: {{ .Values.capabilities.actions }}
    telemetry:
      enable: {{ .Values.capabilities.telemetry.enabled }}
      collectApiServerMetrics: {{ .Values.capabilities.telemetry.collectApiServerMetrics }}
      {{- if .Values.capabilities.telemetry.deployOtelCollector }}
      serverHost: {{ include "komodorAgent.openTelemetry.serviceFqdn" . }}
      {{- else }}
      serverHost: {{ .Values.communications.telemetryServerHost }}
      {{- end }}
    {{- if .Values.capabilities.telemetry.deployOtelCollector }}
    {{-/* When the OTEL Collector is enabled, it collect logs already thus not needing the remote sink */}}
    logger:
      remote:
        enabled: false
    {{- end }}
    resync:
      period: "0"

    resources:
      {{- toYaml .Values.allowedResources | trim | nindent 6 }}

    {{- if .Values.tags }}
    {{- if and .Values.tags (kindIs "map" .Values.tags) }}
    tags: {{ .Values.tags | toYaml | nindent 6 }}
    {{- else if and .Values.tags (kindIs "string" .Values.tags) }}
    {{ $tags := .Values.tags | splitList ";" }}
    {{ $tagMap := dict }}
    {{ range $tags }}
      {{ $pair := splitList ":" . }}
      {{ if eq (len $pair) 2 }}
        {{ $key := index $pair 0 }}
        {{ $value := index $pair 1 }}
        {{ $_ := set $tagMap $key $value }}
      {{ end }}
    {{ end }}
    tags: {{ $tagMap | toYaml | nindent 6 }}
    {{- else }}
      {{ fail "Invalid type for .Values.tags. Expected map or string." }}
    {{- end }}
    {{- end }}
  installed-values.yaml: |
    {{ toYaml .Values | nindent 4 }}
